# Inspired by https://gitlab.com/gitlab-examples/maven/simple-maven-dep and
# https://gitlab.com/gitlab-org/gitlab-ci-yml/blob/master/Maven.gitlab-ci.yml
# 
# Signing procedure inspired by https://gitlab.com/gitlab-org/gitlab-runner/merge_requests/922/diffs
# and related code.
#
# run manually with `gitlab-runner exec docker <task_name>`

include:
  - project: 'swe/gitlab-ci'
    file: '/templates/whitesource-scanning.yml'

stages:
  - build
  - test
  - package
  - beta
  - rc
  - production

variables:
  WHITESOURCE_PRODUCT: "ba-shared-teams"
  BUILD_NUMBER: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used

  MAVEN_CLI_OPTS: "--errors --batch-mode --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

.jdk8: &jdk8
  image: maven:3.6-jdk-8
  cache:
    key: jdk8
    paths:
      - .m2
      - .npm
      - ui-validator/node_modules

.jdk11: &jdk11
  image: maven:3.6-jdk-11
  cache:
    key: jdk11
    paths:
      - .m2
      - .npm
      - ui-validator/node_modules

.test: &test
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS verify -Dbuild.number=${BUILD_NUMBER}
  artifacts:
    reports:
      junit:
        - rpki-validator/target/surefire-reports/TEST-*.xml
        - rpki-validator/target/failsafe-reports/TEST-*.xml
        - rpki-rtr-server/target/surefire-reports/TEST-*.xml
        - rpki-rtr-server/target/failsafe-reports/TEST-*.xml

# before every job - unless overridden in a stage.
#
# Protected environment variables are only available on protected
# branches and tags. Master is protected by default.
#
before_script:
  - apt update && apt install --yes rpm rsync

test:jdk8:
  <<: [*jdk8, *test]
  script:
    - mvn $MAVEN_CLI_OPTS verify --projects !ui-validator -Dbuild.number=${BUILD_NUMBER}

test:jdk11:
  <<: [*jdk11, *test]
  script:
    - mvn $MAVEN_CLI_OPTS verify --projects !ui-validator -Dbuild.number=${BUILD_NUMBER}

test:frontend:
  <<: [*jdk8, *test]
  script:
    - mvn $MAVEN_CLI_OPTS verify --projects ui-validator -Dbuild.number=${BUILD_NUMBER}


package:
  <<: [*jdk8]
  cache:
    policy: pull
  stage: package
  script:
    - mvn clean install
    # Move artifacts with shell so they are not nested in paths.
    - find . -name \*.deb -exec mv {} . \;
    - find . -name \*-dist.tar.gz -exec mv {} . \;
    - find . -name \*.rpm -exec mv {} . \;
  artifacts:
    paths:
      - "*.deb"
      - "*.rpm"
      - "*-dist.tar.gz"
    expire_in: 1 week

